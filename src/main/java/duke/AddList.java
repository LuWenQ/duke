package duke;import java.util.ArrayList;import java.util.List;import java.io.*;import java.nio.file.Files;import java.nio.file.Paths;public class AddList {	public static int num = 0;	public static List<Mission> ls = new ArrayList<>();	public AddList() {		System.out.println("addlist");	}	public String printAllEvent() {		int counter = 1;		String ans = "";		System.out.println("size = " + ls.size());		System.out.println("ls = " + ls.toString());		for(counter = 1; counter < ls.size() + 1; counter += 1) {			ans += counter + ls.get(counter - 1).printMission();			System.out.println("ans = " + ans);		}		return ans;	}	public String printEvent(int index) {		return ls.get(index).printMission();	}	public void addEventWithTime(String str, String type, String time, String atby) {		System.out.println("addEventWithTime");		ls.add(new Mission(str, type, time, atby));		num += 1;	}	public void addEventWithoutTime(String str, String type) {		System.out.println("addEventWithoutTime");		ls.add(new Mission(str, type));		num += 1;	}	public void changeEvent(int index) {		ls.get(index).changeState();	}	public void deleteMission(int index) {		// System.out.println("index = " + index);		ls.remove(index);		num -= 1;	}	public void saveToFile() {		try {			FileWriter fw = new FileWriter("duke.txt");			// BufferedWriter out = new BufferedWriter(fw);			for (Mission a : ls) {				int x = a.state.contentEquals("âœ—") ? 0 : 1;				String str = a.type + "|" + x + "|" + a.content + (a.time==null ? "" : ("|" + a.time)) + "\n";				fw.write(str);			}			fw.close();		} catch (Exception e) {			System.out.println(e);		}	}	public void readFromFile() {		String path = "duke.txt";		try {			int i = 0;			List<String> contents = Files.readAllLines(Paths.get(path));			for(i = 0; i < contents.size(); i += 1) {				ls.add(Mission.newMission(contents.get(i)));				num += 1;			}		} catch (Exception e) {			System.out.println(e);		}	}	public String printLastEvent() {		String ans = "";		ans = ls.get(ls.size() - 1).printMission();		return ans;	}	public void deleteAll() {		for(; num > 0; num--) {			ls.remove(num - 1);		}		num = 0;	}}